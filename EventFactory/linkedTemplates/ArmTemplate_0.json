{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "EventFactory"
		},
		"AzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputEventAvro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "45.avro",
						"folderPath": "eventsnz/eventshub/0/2022/08/03/01/03",
						"container": "eventcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyBookings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DailyBookings.csv",
						"folderPath": "eventsnz",
						"container": "eventcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "eventsnz/eventshub/jsontest",
						"container": "eventcontainer"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Source": {
							"type": "string"
						},
						"IbisServerCode": {
							"type": "string"
						},
						"Type": {
							"type": "string"
						},
						"Data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"IbisServerCode": {
										"type": "string"
									},
									"FullEmailID": {
										"type": "string"
									}
								}
							}
						},
						"EventProcessedUtcTime": {
							"type": "string"
						},
						"PartitionId": {
							"type": "integer"
						},
						"EventEnqueuedUtcTime": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Source']"
										},
										"sink": {
											"name": "Source"
										}
									},
									{
										"source": {
											"path": "$['IbisServerCode']"
										},
										"sink": {
											"name": "IbisServerCode"
										}
									},
									{
										"source": {
											"path": "$['Type']"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"path": "$['Data']['IbisServerCode']"
										},
										"sink": {
											"name": "Data_IbisServerCode"
										}
									},
									{
										"source": {
											"path": "$['Data']['BookID']"
										},
										"sink": {
											"name": "BookID"
										}
									},
									{
										"source": {
											"path": "$['Data']['BookName']"
										},
										"sink": {
											"name": "BookName"
										}
									},
									{
										"source": {
											"path": "$['Data']['ProductDateTime']"
										},
										"sink": {
											"name": "ProductDateTime"
										}
									},
									{
										"source": {
											"path": "$['EventProcessedUtcTime']"
										},
										"sink": {
											"name": "EventProcessedUtcTime"
										}
									},
									{
										"source": {
											"path": "$['PartitionId']"
										},
										"sink": {
											"name": "PartitionId"
										}
									},
									{
										"source": {
											"path": "$['EventEnqueuedUtcTime']"
										},
										"sink": {
											"name": "EventEnqueuedUtcTime"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DailyBookings",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DailyBookings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyCsvFile')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-08-03T02:33:00Z",
						"endTime": "2022-08-04T04:33:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		}
	]
}